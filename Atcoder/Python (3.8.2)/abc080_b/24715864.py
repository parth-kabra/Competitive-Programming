/*
..::::::::::::..:::::..:::::..:::::..::::::::..::::::::..:::::..::
'########::::::::'###:::::::'########:::::'########::::'##::::'##:
 ##.... ##::::::'## ##:::::: ##.... ##::::... ##..::::: ##:::: ##:
 ##:::: ##:::::'##:. ##::::: ##:::: ##::::::: ##::::::: ##:::: ##:
 ########:::::'##:::. ##:::: ########:::::::: ##::::::: #########:
 ##.....:::::: #########:::: ##.. ##::::::::: ##::::::: ##.... ##:
 ##::::::::::: ##.... ##:::: ##::. ##:::::::: ##::::::: ##:::: ##:
 ##::::::::::: ##:::: ##:::: ##:::. ##::::::: ##::::::: ##:::: ##:
..::::::::::::..:::::..:::::..:::::..::::::::..::::::::..:::::..:: 


8___8______________________8___8____
___*8___8*____________________*8___8*___
__*88___88*__________________*88___88*__
_*888___888*________________*888___888*_
_*8888_8888*________________*8888_8888*_
__*8888888*__________________*8888888*__
___*88888*____________________*88888*___
____*888*_________7**7_________*888*____
____*88*_________*8888*_________*88*____
_____*88*_______88888888_______*88*_____
_8_____*8*_____8888888888_____*8*_____8_
__8*_____*8*__8_88888888_8__*8*_____*8__
____88*________8888888888________*88____
_8_____*8888*_8_88888888_8_*8888*_____8_
___88__________8888888888__________88___
_8_____*8888*_8_88888888_8_*8888*_____8_
___*8*_________8888888888_________*8*___
__8____*888*__8_88888888_8__*888*____8__
____88_________8888888888_________88____
_______*888*__8_88888888_8__*888*_______
_______________8888888888_______________
_______________*88888888*_______________
________________*888888*________________
_________________*8888*_________________
___________________*888_________________
_____________________*88________________
_____________6_________*88______________
___________*8____________*88____________
__________*88______________*8*__________
_________*8888*______________*8*________
_________*888*________________*8*_______
__________*88*________________*8*_______
___________*8*_______________*8*________
____________*8*_____________*8*_________
______________*8*_________*8*___________
_________________*<88888>*_____________
*/
#include<bits/stdc++.h>
using namespace std;
#define int long long int
#define all(a) a.begin(),a.end()
const int imax=(1LL<<31)-1;
const int imin=INT_MIN;
const int mod=1e9+7;
template <typename T>
pair<T, bool> setEle(set<T>& searchSet,int index){pair<T, bool> result;if (searchSet.length() > index) {result.first= *(std::next(searchSet.begin(),index));result.second = true;}else{result.second = false;}return result;}
int setBits(int n){int res=0;for(int i=0;i<n;i++){if((n & (1<<i)) != 0){res++;}}return res;}
char tolower(char x){return char(x | ' ');}
char toupper(char x){return char(x & '_');}
int vecSum(vector<int> mp){int res=0;for(int &i : mp){res+=i;} return res;}
void bin(int n){for(int i=10;i>=10;i--){cout<<((n>>i)&1);}cout<<endl;}
int binpow(int a, int b,int m) {int res=1;while(b > 0){if(b&1){res=(res*a)%m;}a=(a*a)%m;b=b>>1;}return res;}
int fact(int n){int N=1e5+10;vector<int> factorials(N);factorials[0]=factorials[1]=1;for(int i=2;i<N;i++){factorials[i]=factorials[i-1]*i;}return factorials[n];}
int sumDigits(int no){return no == 0 ? 0 : no % 10 + sumDigits(no / 10);}
void kabraji_ka_totka(){
    // totka hai dosto !
    int a,b;
    cin>>a>>b;
    for(int i=0;i<=255;i++){
        if((a^i)==b){
            cout<<i<<endl;
            return;
        }
    }
}
int32_t main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
        kabraji_ka_totka();
    return 0;
}